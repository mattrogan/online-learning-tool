// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

#nullable disable

namespace OnlineLearningTool.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231202142057_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("Shared.Models.DiscussionForum.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CommentId");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT")
                        .HasColumnName("Author");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Content");

                    b.Property<DateTime>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2023, 12, 2, 14, 20, 56, 980, DateTimeKind.Local).AddTicks(7690))
                        .HasColumnName("DatePosted");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PostId");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("Shared.Models.DiscussionForum.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("PostId");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT")
                        .HasColumnName("Author");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Content");

                    b.Property<DateTime>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2023, 12, 2, 14, 20, 56, 980, DateTimeKind.Local).AddTicks(1980))
                        .HasColumnName("DatePosted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Title");

                    b.HasKey("PostId");

                    b.ToTable("Posts", (string)null);
                });

            modelBuilder.Entity("Shared.Models.LearningMaterials.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("TopicId");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("TopicId");

                    b.ToTable("Topics", (string)null);
                });

            modelBuilder.Entity("Shared.Models.Practicals.Practical", b =>
                {
                    b.Property<int>("PracticalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("PracticalId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("SolutionsUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("SolutionsUrl");

                    b.Property<string>("WorksheetUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("WorksheetUrl");

                    b.HasKey("PracticalId");

                    b.ToTable("Practicals", (string)null);
                });

            modelBuilder.Entity("Shared.Models.DiscussionForum.Comment", b =>
                {
                    b.HasOne("Shared.Models.DiscussionForum.Post", null)
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shared.Models.DiscussionForum.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
